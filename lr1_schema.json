{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://example.com/product.schema.json",
  "name": "JSON Schema for schema.org Learning Resource",
  "description": "Attempt at a JSON Schema to create valid schema.org/LRMI JSON-LD descriptions of learning resources",
  "type": "object",
  "required": [
    "@context",
    "@id",
    "@type"
  ],
  "additionalProperties": false,
  "properties": {
    "@context": {
      "type": "object",
      "description": "allow flexible context, can add other ns prefixes",
      "required": [
        "@vocab"
      ],
      "properties": {
        "@vocab": {
          "type": "string",
          "format": "regex",
          "pattern": "http://schema.org/",
          "description": "required: schema.org is base ns"
        }
      }
    },
    "@id": {
      "type": "string",
      "format": "regex",
      "pattern": "^http[s]?://.+",
      "description": "required: @id is a http or https URI"
    },
    "@type": {
      "type": "array",
      "minItems": 1,
      "description": "must say what rdf class resource is",
      "contains": {
        "type": "string",
        "format": "regex",
        "pattern": "LearningResource",
        "description": "required: must be a schema.org/LearningResource"
      },
      "items": {
        "type": "string",
        "uniqueItems": true,
        "enum": [
          "LearningResource",
          "WebPage",
          "Book",
          "Chapter"
        ],
        "description": "A very limit list of schema.org types allowed in addition to LearningResource"
      }
    },
    "name": {
      "type": "string"
    },
    "url": {
      "type": "string",
      "format": "regex",
      "pattern": "^http[s]?://.+",
      "description": "required: url is a http or https URI"
    },
    "teaches": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "@id": {
          "type": "string",
          "format": "regex",
          "pattern": "^http[s]?://.+",
          "description": "required: @id is a http or https URI; no bnode refs here!"
        },
        "@type": {
          "type": "string",
          "format": "regex",
          "pattern": "DefinedTerm"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "termCode": {
          "type": "string"
        },
        "inDefinedTermSet": {
          "type": "string"
        }
      }
    }
  }
}
